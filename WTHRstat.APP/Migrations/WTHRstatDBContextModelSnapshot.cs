// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WTHRstat.APP.EntityFramework;

namespace WTHRstat.APP.Migrations
{
    [DbContext(typeof(WTHRstatDBContext))]
    partial class WTHRstatDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WTHRstat.APP.Models.EmissionERD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Source_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Emissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Count = 23,
                            Date = "23.23.2011",
                            Name = "Emiss-23",
                            Source_Id = 1
                        },
                        new
                        {
                            Id = 2,
                            Count = 25,
                            Date = "23.23.2011",
                            Name = "Coqwe-211",
                            Source_Id = 2
                        },
                        new
                        {
                            Id = 3,
                            Count = 51,
                            Date = "23.23.2011",
                            Name = "Rqeeq-214",
                            Source_Id = 3
                        });
                });

            modelBuilder.Entity("WTHRstat.APP.Models.SourceERD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int>("Emission_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Emission_Id")
                        .IsUnique();

                    b.ToTable("Sources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Nrqr St.14 Ap.21",
                            Emission_Id = 1,
                            Name = "Emiss-23"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Nragagag St.145 Ap.212",
                            Emission_Id = 2,
                            Name = "Coqwe-211"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Nrqexxx St.24 Ap.251",
                            Emission_Id = 3,
                            Name = "Rqeeq-214"
                        });
                });

            modelBuilder.Entity("WTHRstat.APP.Models.SourceERD", b =>
                {
                    b.HasOne("WTHRstat.APP.Models.EmissionERD", "Emission")
                        .WithOne("Source")
                        .HasForeignKey("WTHRstat.APP.Models.SourceERD", "Emission_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
